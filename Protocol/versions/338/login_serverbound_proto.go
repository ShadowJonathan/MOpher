// Generated by protocol_builder
// Do not edit

package _338

import (
	"../../lib"
	"fmt"
	"io"
	"math"
)

func (l *LoginStart) Id() int { return 0 }
func (l *LoginStart) Write(ww io.Writer) (err error) {
	if err = lib.WriteString(ww, l.Username); err != nil {
		return
	}
	return
}
func (l *LoginStart) Read(rr io.Reader) (err error) {
	if l.Username, err = lib.ReadString(rr); err != nil {
		return
	}
	return
}

func (e *EncryptionResponse) Id() int { return 1 }
func (e *EncryptionResponse) Write(ww io.Writer) (err error) {
	if err = lib.WriteVarInt(ww, lib.VarInt(len(e.SharedSecret))); err != nil {
		return
	}
	if _, err = ww.Write(e.SharedSecret); err != nil {
		return
	}
	if err = lib.WriteVarInt(ww, lib.VarInt(len(e.VerifyToken))); err != nil {
		return
	}
	if _, err = ww.Write(e.VerifyToken); err != nil {
		return
	}
	return
}
func (e *EncryptionResponse) Read(rr io.Reader) (err error) {
	var tmp0 lib.VarInt
	if tmp0, err = lib.ReadVarInt(rr); err != nil {
		return
	}
	if tmp0 > math.MaxInt16 {
		return fmt.Errorf("array larger than max value: %d > %d", tmp0, math.MaxInt16)
	}
	if tmp0 < 0 {
		return fmt.Errorf("negative array size: %d < 0", tmp0)
	}
	e.SharedSecret = make([]byte, tmp0)
	if _, err = rr.Read(e.SharedSecret); err != nil {
		return
	}
	var tmp1 lib.VarInt
	if tmp1, err = lib.ReadVarInt(rr); err != nil {
		return
	}
	if tmp1 > math.MaxInt16 {
		return fmt.Errorf("array larger than max value: %d > %d", tmp1, math.MaxInt16)
	}
	if tmp1 < 0 {
		return fmt.Errorf("negative array size: %d < 0", tmp1)
	}
	e.VerifyToken = make([]byte, tmp1)
	if _, err = rr.Read(e.VerifyToken); err != nil {
		return
	}
	return
}

func init() {
	packets[lib.Login][lib.Serverbound][0] = func() lib.Packet { return &LoginStart{} }
	packets[lib.Login][lib.Serverbound][1] = func() lib.Packet { return &EncryptionResponse{} }
}
